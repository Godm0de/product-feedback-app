{
    "pipes": [],
    "interfaces": [
        {
            "name": "Comment",
            "id": "interface-Comment-e4d75f42f3352b9c05c63dd6564e14b1756158aa5a7c69b5f43b0b40b6957acb7d5dc008538c2461896e3fbd71d64ab79cffd74741113007e8e105a9afdeadd6",
            "file": "src/app/core/models/comment.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Reply } from './reply.model';\nimport { User } from './user.model';\n\nexport interface Comment {\n    id?: number;\n    content: string;\n    user: User;\n    replies?: Reply[];\n}\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "replies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Reply[]",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Feedback",
            "id": "interface-Feedback-7c5797a6a55fa0db125ba2a4fa776df77fabb2cc363cfb74432a92249e07ada56903365eaab85220bddcce01320f396d0d419957ae4817ff591f2361eb8e13cc",
            "file": "src/app/core/models/feedback.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Comment } from './comment.model';\n\nexport interface Feedback {\n    id?: number;\n    title: string;\n    category: string;\n    upvotes: number;\n    status: string;\n    description: string;\n    comments?: Comment[];\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "comments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Comment[]",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "upvotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Reply",
            "id": "interface-Reply-f85fa04352c29d76654fb405dec7c6ec94856b02816a23b5fe9dc3ee8b5cd5a83b62a9eae9a13dbf2e05a379045d3e32bf4616e80c6f676783313d18c280e52c",
            "file": "src/app/core/models/reply.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from './user.model';\n\nexport interface Reply {\n    content: string;\n    replyingTo: string;\n    user: User;\n}\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "replyingTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UiToastData",
            "id": "interface-UiToastData-1e457f5f6d3b3afc4313f0dc521a3a430d7615aa0946adbadce8a8ca58ee59f51c64b025432f59d39572941d7286f265a587054aab159fedf82753d0b9860611",
            "file": "src/app/shared/ui-components/toast/ui-toast-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UiToastData {\n    message: string;\n    duration?: number;\n    close?: string;\n    position?: UiToastPosition;\n}\n\nexport type UiToastPosition = 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left' | 'top-center' | 'bottom-center' | 'center';\n",
            "properties": [
                {
                    "name": "close",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UiToastPosition",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-49d5fc9c65564f487b0f994f12db5220206ff243d19a967c05260d7f8e8e936e286de3e7d8e480eaeec468bd83cd4af017c2f8b67235d5372ef6d6d980f27885",
            "file": "src/app/core/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n    image: string;\n    name: string;\n    username: string;\n}\n",
            "properties": [
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CommentService",
            "id": "injectable-CommentService-bf6fb8d7e82f2b746d8efef073fb0d5736433a3bf9903ad5f8aad2b35a19a1622bee1ef751806c75430051be186656609f1eddd7608736b92725953066757e6d",
            "file": "src/app/core/http/comment.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createComment",
                    "args": [
                        {
                            "name": "comment",
                            "type": "Comment",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "comment",
                            "type": "Comment",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteComment",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCommentDetail",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Comment>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getComments",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Comment[]>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateComment",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "comment",
                            "type": "Comment",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "comment",
                            "type": "Comment",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { endpoints } from './endpoints';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CommentService {\n    constructor(private http: HttpClient) {}\n\n    createComment(comment: Comment): Observable<void> {\n        return this.http.post<void>(endpoints.comments, comment);\n    }\n\n    getCommentDetail(id: number): Observable<Comment> {\n        return this.http.get<Comment>(`${endpoints.comments}/${id}`);\n    }\n\n    getComments(): Observable<Comment[]> {\n        return this.http.get<Comment[]>(endpoints.comments);\n    }\n\n    updateComment(id: number, comment: Comment): Observable<void> {\n        return this.http.put<void>(`${endpoints.comments}/${id}`, comment);\n    }\n\n    deleteComment(id: number): Observable<void> {\n        return this.http.delete<void>(`${endpoints.comments}/${id}`);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FeedbackService",
            "id": "injectable-FeedbackService-01ff95d253dbb36b4102b77020fe41f6e4d6ac1c8f7b511e70ad01ff568136ca9629f714d57429a9c1f7b8b3fda3b0355726f5709b67ebc04b8126eb48d5251d",
            "file": "src/app/core/http/feedback.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createFeedback",
                    "args": [
                        {
                            "name": "feedback",
                            "type": "Feedback",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "feedback",
                            "type": "Feedback",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteFeedback",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeedbackDetail",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Feedback | undefined>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeedbackList",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Feedback[]>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateFeedback",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "feedback",
                            "type": "Feedback",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "feedback",
                            "type": "Feedback",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport data from '../mocks/data.json';\nimport { Feedback } from '../models/feedback.model';\nimport { endpoints } from './endpoints';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeedbackService {\n    constructor(private http: HttpClient) {}\n\n    createFeedback(feedback: Feedback): Observable<void> {\n        return this.http.post<void>(endpoints.feedbacks, feedback);\n    }\n\n    getFeedbackDetail(id: number): Observable<Feedback | undefined> {\n        const feedback = data.productRequests.find((x) => x.id === id);\n        return new BehaviorSubject<Feedback | undefined>(feedback).asObservable();\n    }\n\n    getFeedbackList(): Observable<Feedback[]> {\n        return new BehaviorSubject<Feedback[]>(data.productRequests).asObservable();\n    }\n\n    updateFeedback(id: number, feedback: Feedback): Observable<void> {\n        return this.http.put<void>(`${endpoints.feedbacks}/${id}`, feedback);\n    }\n\n    deleteFeedback(id: number): Observable<void> {\n        return this.http.delete<void>(`${endpoints.feedbacks}/${id}`);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ReplyService",
            "id": "injectable-ReplyService-97acd977a96562850652cf23be0d3ec0a4f7be7b68c2dfe90aa3c4d08ce8482e3bc338c3948500b64ea482112aee2489bbbe5b29edb623a5859a1794a7d0745a",
            "file": "src/app/core/http/reply.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createReply",
                    "args": [
                        {
                            "name": "reply",
                            "type": "Reply",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "reply",
                            "type": "Reply",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteReply",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getReplies",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Reply[]>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getReplyDetail",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Reply>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateReply",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "reply",
                            "type": "Reply",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "reply",
                            "type": "Reply",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Reply } from '../models/reply.model';\nimport { endpoints } from './endpoints';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReplyService {\n    constructor(private http: HttpClient) {}\n\n    createReply(reply: Reply): Observable<void> {\n        return this.http.post<void>(endpoints.replies, reply);\n    }\n\n    getReplyDetail(id: number): Observable<Reply> {\n        return this.http.get<Reply>(`${endpoints.replies}/${id}`);\n    }\n\n    getReplies(): Observable<Reply[]> {\n        return this.http.get<Reply[]>(endpoints.replies);\n    }\n\n    updateReply(id: number, reply: Reply): Observable<void> {\n        return this.http.put<void>(`${endpoints.replies}/${id}`, reply);\n    }\n\n    deleteReply(id: number): Observable<void> {\n        return this.http.delete<void>(`${endpoints.replies}/${id}`);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TranslocoHttpLoader",
            "id": "injectable-TranslocoHttpLoader-5ccb1d6465eb1b52a67b732370bfd47d524e05ce79443df804d1c0bb0c4a731098685225f6c5f9948c22acb9d91ec3969fb7b1cebee4dc5fb5a9bd120d939b26",
            "file": "src/app/transloco-root.module.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getTranslation",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, NgModule } from '@angular/core';\nimport { environment } from '../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get<Translation>(`/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en'],\n        defaultLang: 'en',\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UiSelectService",
            "id": "injectable-UiSelectService-38dd2a2c8599d14726ceb66354dc79a9b3a938cf66b1d670a822f637c59a85474cd765eba2bbdc83b5c7cb658a7ada10145531d3ce1e0289c6bb72a222f43e85",
            "file": "src/app/shared/ui-components/select/ui-select.service.ts",
            "properties": [
                {
                    "name": "select",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UiSelectPanelComponent",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "UiSelectPanelComponent",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "select",
                            "type": "UiSelectPanelComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "select",
                            "type": "UiSelectPanelComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { UiSelectPanelComponent } from './select-panel/ui-select-panel.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UiSelectService {\n    private select!: UiSelectPanelComponent;\n\n    public register(select: UiSelectPanelComponent) {\n        this.select = select;\n    }\n\n    public getSelect(): UiSelectPanelComponent {\n        return this.select;\n    }\n}\n",
            "type": "injectable"
        },
        {
            "name": "UiToastService",
            "id": "injectable-UiToastService-1825d5878fe9c431e860d14a9e721b449be91d5cfb293e299c6536ad24501b12eb4000c696ec8a547702b5807df426fa7ccdcc19b4c51cee62a045316738efe8",
            "file": "src/app/shared/ui-components/toast/ui-toast.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "component",
                            "type": "ComponentType<UiToastComponent>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "UiToastData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "UiToastComponent"
                    ],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "ComponentType<UiToastComponent>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "UiToastData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ComponentType, Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Injectable, Injector } from '@angular/core';\nimport { UiToastData } from './ui-toast-data';\nimport { UiToastRef } from './ui-toast-ref';\nimport { Ui_TOAST_DATA } from './ui-toast-tokens';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UiToastService {\n    constructor(private overlay: Overlay, private injector: Injector) {}\n\n    open<UiToastComponent>(component: ComponentType<UiToastComponent>, data: UiToastData) {\n        const positionStrategy = this.overlay.position().global().centerHorizontally().bottom();\n\n        const overlayRef = this.overlay.create({\n            positionStrategy,\n        });\n\n        const toastRef = new UiToastRef(overlayRef);\n\n        const injector = Injector.create({\n            parent: this.injector,\n            providers: [\n                { provide: UiToastRef, useValue: toastRef },\n                { provide: Ui_TOAST_DATA, useValue: data },\n            ],\n        });\n\n        const portal = new ComponentPortal(component, null, injector);\n        overlayRef.attach(portal);\n\n        return toastRef;\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "overlay",
                        "type": "Overlay",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-d1d8b8b39f960ec593a7319a98e5653c9b342c3f83275be0e4b61285f3ca6f46fedf28a4944a6f6077586ea27d099af6a901416343e7c16d06d6bd0f15940a14",
            "file": "src/app/core/http/user.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAuthendicatedUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<User>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport data from '../mocks/data.json';\nimport { User } from '../models/user.model';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserService {\n    constructor(private http: HttpClient) {}\n\n    getAuthendicatedUser(): Observable<User> {\n        return new BehaviorSubject<User>(data.currentUser).asObservable();\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "UiToastRef",
            "id": "class-UiToastRef-f832e476fd51f39985a96031655365dcbc2ee103f5214108021fae3c3ff51391f6e852fb35870f711cf6c83df65287996c4c3b5bc2c3e9b9b41fd729bae6f337",
            "file": "src/app/shared/ui-components/toast/ui-toast-ref.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { OverlayRef } from '@angular/cdk/overlay';\nimport { Observable, Subject } from 'rxjs';\n\nexport class UiToastRef {\n    private afterClosedSubject: Subject<any> = new Subject();\n\n    constructor(private overlayRef: OverlayRef) {}\n\n    public close(data?: any) {\n        this.overlayRef.dispose();\n        this.afterClosedSubject.next(data);\n        this.afterClosedSubject.complete();\n    }\n\n    public afterClosed(): Observable<any> {\n        return this.afterClosedSubject.asObservable();\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "overlayRef",
                        "type": "OverlayRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "overlayRef",
                        "type": "OverlayRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "afterClosedSubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "afterClosed",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "close",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "BannerSubtitleDirective",
            "id": "directive-BannerSubtitleDirective-8be170e1d4fe83eabfdd4ce7709e2cd0f3148ad2c387d3f67b8e5b23f9053fe846eb4b8b59a0b8f4ad2f156de2ef399fae309e4cfdb6069155e7cad11b2d2ae5",
            "file": "src/app/modules/suggestions/components/banner/banner.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    selector: '[app-banner-title]',\n})\nexport class BannerTitleDirective {\n    @HostBinding('class') class = 'banner__title';\n}\n\n@Directive({\n    selector: '[app-banner-subtitle]',\n})\nexport class BannerSubtitleDirective {\n    @HostBinding('class') class = 'banner__subtitle';\n}\n",
            "selector": "[app-banner-subtitle]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'banner__subtitle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'banner__subtitle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "BannerTitleDirective",
            "id": "directive-BannerTitleDirective-8be170e1d4fe83eabfdd4ce7709e2cd0f3148ad2c387d3f67b8e5b23f9053fe846eb4b8b59a0b8f4ad2f156de2ef399fae309e4cfdb6069155e7cad11b2d2ae5",
            "file": "src/app/modules/suggestions/components/banner/banner.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    selector: '[app-banner-title]',\n})\nexport class BannerTitleDirective {\n    @HostBinding('class') class = 'banner__title';\n}\n\n@Directive({\n    selector: '[app-banner-subtitle]',\n})\nexport class BannerSubtitleDirective {\n    @HostBinding('class') class = 'banner__subtitle';\n}\n",
            "selector": "[app-banner-title]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'banner__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'banner__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "EmptyFeedbacksBodyDirective",
            "id": "directive-EmptyFeedbacksBodyDirective-2bf75979a2b97a0e56575488f0a5e35749197346a2e8d15c2954ae5a99391f98c7ec78bb31ed7317deb9e73df0bb87648ebac4701e8b780a04bc9c0ea3268ff4",
            "file": "src/app/modules/suggestions/components/empty-feedbacks/empty-feedbacks.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[empty-feedbacks-body]',\n})\nexport class EmptyFeedbacksBodyDirective {\n    @HostBinding('class') class = 'empty-feedbacks__body';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[empty-feedbacks-title]',\n})\nexport class EmptyFeedbacksTitleDirective {\n    @HostBinding('class') class = 'empty-feedbacks__title';\n}\n",
            "selector": "[empty-feedbacks-body]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'empty-feedbacks__body'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'empty-feedbacks__body'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "EmptyFeedbacksTitleDirective",
            "id": "directive-EmptyFeedbacksTitleDirective-2bf75979a2b97a0e56575488f0a5e35749197346a2e8d15c2954ae5a99391f98c7ec78bb31ed7317deb9e73df0bb87648ebac4701e8b780a04bc9c0ea3268ff4",
            "file": "src/app/modules/suggestions/components/empty-feedbacks/empty-feedbacks.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[empty-feedbacks-body]',\n})\nexport class EmptyFeedbacksBodyDirective {\n    @HostBinding('class') class = 'empty-feedbacks__body';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[empty-feedbacks-title]',\n})\nexport class EmptyFeedbacksTitleDirective {\n    @HostBinding('class') class = 'empty-feedbacks__title';\n}\n",
            "selector": "[empty-feedbacks-title]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'empty-feedbacks__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'empty-feedbacks__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "FeedbackCardContentDirective",
            "id": "directive-FeedbackCardContentDirective-9b6a1fce083b1d6319142f98d41a4a89959523c571f641d38e69b793eb7c6479f0cb65c7de4d78accf192972caffbe08f06b6faf80700ccfabf9d92e3c083e79",
            "file": "src/app/shared/ui-components/feedback-card/feeed-card.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-side]',\n})\nexport class FeedbackCardSideDirective {\n    @HostBinding('class') class = 'feedback-card__aside';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-title]',\n})\nexport class FeedbackCardTitleDirective {\n    @HostBinding('class') class = 'feedback-card__title';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-content]',\n})\nexport class FeedbackCardContentDirective {\n    @HostBinding('class') class = 'feedback-card__content';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-footer]',\n})\nexport class FeedbackCardFooterDirective {\n    @HostBinding('class') class = 'feedback-card__footer';\n}\n",
            "selector": "[feedback-card-content]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__content'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__content'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "FeedbackCardFooterDirective",
            "id": "directive-FeedbackCardFooterDirective-9b6a1fce083b1d6319142f98d41a4a89959523c571f641d38e69b793eb7c6479f0cb65c7de4d78accf192972caffbe08f06b6faf80700ccfabf9d92e3c083e79",
            "file": "src/app/shared/ui-components/feedback-card/feeed-card.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-side]',\n})\nexport class FeedbackCardSideDirective {\n    @HostBinding('class') class = 'feedback-card__aside';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-title]',\n})\nexport class FeedbackCardTitleDirective {\n    @HostBinding('class') class = 'feedback-card__title';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-content]',\n})\nexport class FeedbackCardContentDirective {\n    @HostBinding('class') class = 'feedback-card__content';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-footer]',\n})\nexport class FeedbackCardFooterDirective {\n    @HostBinding('class') class = 'feedback-card__footer';\n}\n",
            "selector": "[feedback-card-footer]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__footer'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__footer'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "FeedbackCardSideDirective",
            "id": "directive-FeedbackCardSideDirective-9b6a1fce083b1d6319142f98d41a4a89959523c571f641d38e69b793eb7c6479f0cb65c7de4d78accf192972caffbe08f06b6faf80700ccfabf9d92e3c083e79",
            "file": "src/app/shared/ui-components/feedback-card/feeed-card.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-side]',\n})\nexport class FeedbackCardSideDirective {\n    @HostBinding('class') class = 'feedback-card__aside';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-title]',\n})\nexport class FeedbackCardTitleDirective {\n    @HostBinding('class') class = 'feedback-card__title';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-content]',\n})\nexport class FeedbackCardContentDirective {\n    @HostBinding('class') class = 'feedback-card__content';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-footer]',\n})\nexport class FeedbackCardFooterDirective {\n    @HostBinding('class') class = 'feedback-card__footer';\n}\n",
            "selector": "[feedback-card-side]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__aside'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__aside'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "FeedbackCardTitleDirective",
            "id": "directive-FeedbackCardTitleDirective-9b6a1fce083b1d6319142f98d41a4a89959523c571f641d38e69b793eb7c6479f0cb65c7de4d78accf192972caffbe08f06b6faf80700ccfabf9d92e3c083e79",
            "file": "src/app/shared/ui-components/feedback-card/feeed-card.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-side]',\n})\nexport class FeedbackCardSideDirective {\n    @HostBinding('class') class = 'feedback-card__aside';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-title]',\n})\nexport class FeedbackCardTitleDirective {\n    @HostBinding('class') class = 'feedback-card__title';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-content]',\n})\nexport class FeedbackCardContentDirective {\n    @HostBinding('class') class = 'feedback-card__content';\n}\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[feedback-card-footer]',\n})\nexport class FeedbackCardFooterDirective {\n    @HostBinding('class') class = 'feedback-card__footer';\n}\n",
            "selector": "[feedback-card-title]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "defaultValue": "'feedback-card__title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "UiBadgeDirective",
            "id": "directive-UiBadgeDirective-ec59242ca21f4a7aba8ab18d6b775cc52659c41f8f03992a113ebd264871ecde257abcfc6512befa7380a0a3256e60d97457c07c6e915bf41911a77fe576db68",
            "file": "src/app/shared/ui-components/badge/ui-badge.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, Inject, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[ui-badge]',\n})\nexport class UiBadgeDirective implements OnChanges, OnDestroy {\n    @Input() value!: number;\n\n    private badgeElement: HTMLElement | null = null;\n    private regex = new RegExp(/^[0-9]\\d*$/);\n\n    constructor(@Inject(DOCUMENT) private document: Document, private elRef: ElementRef<HTMLElement>) {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('value' in changes) {\n            const value = `${changes['value'].currentValue}`.trim();\n            if (value?.length > 0 && this.regex.test(value)) {\n                this.updateBadge(value);\n            } else {\n                this.updateBadge('0');\n            }\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.badgeElement) {\n            this.elRef.nativeElement.removeChild(this.badgeElement);\n            this.badgeElement.remove();\n        }\n    }\n\n    private createBadge(value: string): HTMLElement {\n        const badge = this.document.createElement('span');\n        badge.classList.add('ui-badge');\n        badge.textContent = value;\n        this.elRef.nativeElement.classList.add('ui-badge-container'); // add class to parent element\n        this.elRef.nativeElement.appendChild(badge); // add badge to parent element\n        return badge;\n    }\n\n    private updateBadge(value: string): void {\n        if (!this.badgeElement) {\n            this.badgeElement = this.createBadge(value);\n        } else {\n            this.badgeElement.textContent = value;\n        }\n    }\n}\n",
            "selector": "[ui-badge]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "badgeElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement | null",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "regex",
                    "defaultValue": "new RegExp(/^[0-9]\\d*$/)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createBadge",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HTMLElement",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateBadge",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "OnChanges",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "UiButtonDirective",
            "id": "directive-UiButtonDirective-76ef230405429c5f1b7e839f0261990e64383f3849e3a17d87a9d6a59401ec6f3b2a747f02c9fdc7f2b40e3489dc03314f4207ff429ae02977c9c6f0649eaecb",
            "file": "src/app/shared/ui-components/button/ui-button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\n\nexport type ButtonColors = 'primary' | 'secondary' | 'light' | 'dark' | 'error' | 'default';\nexport type ButtonType = 'button' | 'submit' | 'reset';\nexport type ButtonSize = 'long' | 'default';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[ui-button]',\n    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n    host: {\n        class: 'ui-button',\n        '[class.ui-button--primary]': 'color === \"primary\"',\n        '[class.ui-button--secondary]': 'color === \"secondary\"',\n        '[class.ui-button--dark]': 'color === \"dark\"',\n        '[class.ui-button--light]': 'color === \"light\"',\n        '[class.ui-button--error]': 'color === \"error\"',\n        '[class.ui-button--long]': 'size === \"long\"',\n    },\n})\nexport class UiButtonDirective {\n    @Input() color: ButtonColors = 'default';\n    @Input() size: ButtonSize = 'default';\n}\n",
            "selector": "[ui-button]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "ButtonColors",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "ButtonSize",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "UiInputDirective",
            "id": "directive-UiInputDirective-c94f7ad7d9926c285821b837e75b4a831a3c32d4913f51bc2ec4ff7e327ec6811ec615b8c77187d6827f5e66685d232501c7d2168e1033932464409eff954214",
            "file": "src/app/shared/ui-components/input/ui-input.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line @angular-eslint/directive-selector\n    selector: '[uiInput]',\n})\nexport class UiInputDirective {\n    @HostBinding('class') elementClass = 'ui-input';\n}\n",
            "selector": "[uiInput]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'ui-input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementClass",
                    "defaultValue": "'ui-input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-889ed38e04fa7c2d39bbc2867e4b452ac4e97f8b3f29d35aaedcb014410f822a58386a1a35d4872eeb96f12fcb5dbb34482c931ca93e12ac1133f91c362b80a9",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "template": "<div class=\"container\"><router-outlet></router-outlet></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    template: `<div class=\"container\"><router-outlet></router-outlet></div>`,\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "BackBtnComponent",
            "id": "component-BackBtnComponent-4c84d55fe7f901696fa397c19976d4331571fabf4a783b66f436d28c935e8e2b91437b10b3181e010af1dc5a63d467100c1f63343a6788d7517eea21b6b754cd",
            "file": "src/app/modules/feedback/components/back-btn/back-btn.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-back-btn",
            "styleUrls": [
                "./back-btn.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./back-btn.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "back",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Location } from '@angular/common';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-back-btn',\n    templateUrl: './back-btn.component.html',\n    styleUrls: ['./back-btn.component.scss'],\n})\nexport class BackBtnComponent {\n    constructor(private location: Location) {}\n\n    back() {\n        this.location.back();\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.back {\n    display: flex;\n    gap: 1.2294rem;\n    color: colors.$dark-color;\n    font-weight: bold;\n    cursor: pointer;\n\n    &:hover {\n        text-decoration: underline;\n    }\n}\n",
                    "styleUrl": "./back-btn.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<span class=\"back\" (click)=\"back()\">\n    <ui-icon name=\"arrow-left\"></ui-icon>\n    <ng-content></ng-content>\n</span>\n"
        },
        {
            "name": "BannerComponent",
            "id": "component-BannerComponent-7e18004769c1c755a3424c1890c5483eeec4f64497ede2ebd22d292eb46c5e5644c4f05de65cec5fa6f7894b785b2eafd774f65cb171313107a63ba019c74188",
            "file": "src/app/modules/suggestions/components/banner/banner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-banner",
            "styleUrls": [
                "./banner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./banner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-banner',\n    templateUrl: './banner.component.html',\n    styleUrls: ['./banner.component.scss'],\n})\nexport class BannerComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.banner {\n    background: url('/assets/images/suggestions/desktop/background-header.png') no-repeat center center;\n    background-size: cover;\n    padding: 1.5rem;\n    border-radius: 0.625rem;\n\n    height: 8.5625rem;\n    color: colors.$white-color;\n\n    width: 100%;\n\n    &__subtitle {\n        font-size: var(--fs-body-2);\n    }\n}\n",
                    "styleUrl": "./banner.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"banner\">\n    <div class=\"banner__title\">\n        <ng-content select=\"[app-banner-title]\"></ng-content>\n    </div>\n    <div class=\"banner__subtitle\">\n        <ng-content select=\"[app-banner-subtitle]\"></ng-content>\n    </div>\n</div>\n"
        },
        {
            "name": "CategoryFilterComponent",
            "id": "component-CategoryFilterComponent-9ac80d3ceefade3d2a7cb5deffa2221bb1877da070c61318f50f4f9f74f727b1c8750e913117a929a4ed7f94460bf6cc0444dda613c9827a1564d92f81bb834c",
            "file": "src/app/modules/suggestions/components/category-filter/category-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-category-filter",
            "styleUrls": [
                "./category-filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./category-filter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "categorySelected",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "categories",
                    "defaultValue": "[\n        {\n            name: 'all',\n            selected: true,\n        },\n        {\n            name: 'ui',\n            selected: false,\n        },\n        {\n            name: 'ux',\n            selected: false,\n        },\n        {\n            name: 'enhancement',\n            selected: false,\n        },\n        {\n            name: 'bug',\n            selected: false,\n        },\n        {\n            name: 'feature',\n            selected: false,\n        },\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "getCategoryActive",
                    "args": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCategory",
                    "args": [
                        {
                            "name": "categoryName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "categoryName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-category-filter',\n    templateUrl: './category-filter.component.html',\n    styleUrls: ['./category-filter.component.scss'],\n})\nexport class CategoryFilterComponent {\n    @Output() categorySelected = new EventEmitter<string>();\n\n    categories = [\n        {\n            name: 'all',\n            selected: true,\n        },\n        {\n            name: 'ui',\n            selected: false,\n        },\n        {\n            name: 'ux',\n            selected: false,\n        },\n        {\n            name: 'enhancement',\n            selected: false,\n        },\n        {\n            name: 'bug',\n            selected: false,\n        },\n        {\n            name: 'feature',\n            selected: false,\n        },\n    ];\n\n    setCategory(categoryName: string) {\n        this.categories.forEach((c) => (c.selected = c.name === categoryName));\n\n        this.categorySelected.emit(categoryName);\n    }\n\n    getCategoryActive(category: string) {\n        return this.categories.filter((c) => c.name === category)[0].selected;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: flex;\n    flex-wrap: wrap;\n    row-gap: 1.125rem;\n    column-gap: 0.5rem;\n    background: white;\n    padding: 1.5rem;\n\n    border-radius: 0.625rem;\n}\n",
                    "styleUrl": "./category-filter.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ui-chip-list *transloco=\"let t\" aria-label=\"Feedbacks category filter\">\n    <ui-chip *ngFor=\"let category of categories\" [active]=\"getCategoryActive(category.name)\" (click)=\"setCategory(category.name)\">{{\n        t('categoriesFeedbackFilter.' + category.name)\n    }}</ui-chip>\n</ui-chip-list>\n"
        },
        {
            "name": "EmptyFeedbacksComponent",
            "id": "component-EmptyFeedbacksComponent-057a08c06a521da201a1ffdaf56ad6c06bfffedf50033535d89462c9cba678ab12918c620c800ce4af999cdcb77bd6b3ebf9740920551e5f00d024ea351c3a77",
            "file": "src/app/modules/suggestions/components/empty-feedbacks/empty-feedbacks.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-empty-feedbacks",
            "styleUrls": [
                "./empty-feedbacks.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./empty-feedbacks.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-empty-feedbacks',\n    templateUrl: './empty-feedbacks.component.html',\n    styleUrls: ['./empty-feedbacks.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class EmptyFeedbacksComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".empty-feedbacks {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 37.5rem;\n\n    background: white;\n    border-radius: 0.625rem;\n\n    &__image {\n        min-height: 8.5463rem;\n        min-width: auto;\n    }\n    &__title {\n        margin: 3.3287rem 0 0 0;\n    }\n\n    &__body {\n        margin: 1rem 0 3rem 0;\n        text-align: center;\n        max-width: 45ch;\n    }\n}\n",
                    "styleUrl": "./empty-feedbacks.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"empty-feedbacks\">\n    <img src=\"/assets/images/suggestions/illustration-empty.svg\" alt=\"There is not feedbacks\" class=\"empty-feedbacks__image\" />\n    <ng-content select=\"[empty-feedbacks-title]\"></ng-content>\n    <ng-content select=\"[empty-feedbacks-body]\"></ng-content>\n    <ng-content select=\"[empty-feedbacks-button]\"></ng-content>\n</div>\n"
        },
        {
            "name": "FeedbackCardComponent",
            "id": "component-FeedbackCardComponent-49f69f245cb6108770e4eab831f2974f16d4b4fc3d2786ef2241f6f4385e25695aebef7b631c92c560f71b48f6f16db233bdbcef4dadae9f6d8f7b133151b8b8",
            "file": "src/app/shared/ui-components/feedback-card/feedback-card.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feedback-card",
            "styleUrls": [
                "./feedback-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./feedback-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'app-feedback-card',\n    templateUrl: './feedback-card.component.html',\n    styleUrls: ['./feedback-card.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FeedbackCardComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n@use 'tools/media';\n\n$class: 'feedback-card';\n\n:host {\n    display: block;\n}\n\n.#{$class} {\n    display: flex;\n    align-items: flex-start;\n    background-color: colors.$white-color;\n    border-radius: 0.625rem;\n    padding: 1.75rem 2rem;\n    gap: 2.25rem;\n\n    @include media.mobile {\n        flex-direction: column;\n        gap: 1rem;\n    }\n\n    &__title {\n        margin-top: 0;\n    }\n\n    &__body {\n        width: 100%;\n    }\n\n    &__content {\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n        gap: 1rem;\n    }\n\n    &__title {\n        margin-bottom: 0.25rem;\n    }\n\n    &__text {\n        margin-top: 0;\n        margin-bottom: 1rem;\n    }\n\n    &__side {\n        @include media.mobile {\n            order: 1;\n            width: 100%;\n        }\n    }\n}\n",
                    "styleUrl": "./feedback-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"feedback-card\">\n    <div class=\"feedback-card__side\">\n        <ng-content select=\"[feedback-card-aside]\"></ng-content>\n    </div>\n    <article class=\"feedback-card__body\">\n        <div class=\"feedback-card__title\">\n            <ng-content select=\"[feedback-card-title]\"></ng-content>\n        </div>\n\n        <div class=\"feedback-card__content\">\n            <ng-content select=\"[feedback-card-content]\"></ng-content>\n        </div>\n\n        <div class=\"feedback-card__footer\">\n            <ng-content select=\"[feedback-card-footer]\"></ng-content>\n        </div>\n    </article>\n</div>\n"
        },
        {
            "name": "FeedbackDetailComponent",
            "id": "component-FeedbackDetailComponent-36d187cbc70c50e444884c36b315b56e9da100c666ac1ab1fe4efb4cc524fa505817242d4d74426cdf85198736afa244f267a46fa72f02bd454c3098616bc142",
            "file": "src/app/modules/feedback/layouts/feedback-detail/feedback-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feedback-detail",
            "styleUrls": [
                "./feedback-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./feedback-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "feedback",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Feedback",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "id",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "subscription",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { FeedbackService } from 'src/app/core/http/feedback.service';\nimport { Feedback } from 'src/app/core/models/feedback.model';\n\n@Component({\n    selector: 'app-feedback-detail',\n    templateUrl: './feedback-detail.component.html',\n    styleUrls: ['./feedback-detail.component.scss'],\n})\nexport class FeedbackDetailComponent implements OnInit, OnDestroy {\n    subscription: Subscription = new Subscription();\n    id: number = 0;\n    feedback!: Feedback;\n\n    constructor(private readonly feedbackService: FeedbackService, private route: ActivatedRoute) {}\n\n    ngOnDestroy(): void {\n        this.subscription.unsubscribe();\n    }\n\n    ngOnInit(): void {\n        this.id = Number(this.route.snapshot.paramMap.get('id'));\n\n        this.subscription.add(\n            this.feedbackService.getFeedbackDetail(this.id).subscribe((feedback) => {\n                this.feedback = feedback as Feedback;\n            })\n        );\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".layout {\n    margin: 3.9375rem;\n}\n\n.toolbar {\n    margin-bottom: 0.625rem;\n}\n",
                    "styleUrl": "./feedback-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "feedbackService",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "feedbackService",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<section class=\"layout\">\n    <ui-toolbar class=\"toolbar\" justify=\"between\" background=\"transparent\">\n        <app-back-btn>Go Back</app-back-btn>\n        <button ui-button color=\"secondary\">Edit Feedback</button>\n    </ui-toolbar>\n    <app-feedback-card>\n        <ui-counter feedback-card-aside class=\"hide-mobile\" [activeAfterFirstClick]=\"true\" [initValue]=\"feedback.upvotes\"></ui-counter>\n        <ng-container feedback-card-aside>\n            <section class=\"show-only-mobile\">\n                <div class=\"feedback-aside-mobile\">\n                    <ui-counter order=\"row\" [activeAfterFirstClick]=\"true\" [initValue]=\"feedback.upvotes\"></ui-counter>\n                    <ui-icon name=\"comments\" ui-badge></ui-icon>\n                </div>\n            </section>\n        </ng-container>\n        <h3 feedback-card-title>{{ feedback.title }}</h3>\n        <div feedback-card-content>\n            <p class=\"text\">{{ feedback.description }}</p>\n            <ui-icon class=\"hide-mobile\" name=\"comments\" ui-badge [value]=\"feedback.comments ? feedback.comments.length : 0\"></ui-icon>\n        </div>\n        <ui-chip feedback-card-footer [selectable]=\"false\">{{ feedback.category | titlecase }}</ui-chip>\n    </app-feedback-card>\n</section>\n"
        },
        {
            "name": "SuggestionsLayoutComponent",
            "id": "component-SuggestionsLayoutComponent-62e4a5628fdc2fb49501478e708df4d91d428ec525a1466b8e6ff8d2dcbc5f9ed345285e09d8eaee2aa2bcfdcecd250d69830ffa656b66373eb4d8f99de39c31",
            "file": "src/app/modules/suggestions/layout/suggestions-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-suggestions-layout",
            "styleUrls": [
                "./suggestions-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./suggestions-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "feedbacks$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Feedback[]>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "filterFeedbacks",
                    "args": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFeedbacksFiltered",
                    "args": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Feedback[]>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { map, Observable } from 'rxjs';\nimport { FeedbackService } from 'src/app/core/http/feedback.service';\nimport { Feedback } from 'src/app/core/models/feedback.model';\n\n@Component({\n    selector: 'app-suggestions-layout',\n    templateUrl: './suggestions-layout.component.html',\n    styleUrls: ['./suggestions-layout.component.scss'],\n})\nexport class SuggestionsLayoutComponent implements OnInit {\n    feedbacks$!: Observable<Feedback[]>;\n\n    constructor(private feedbacks: FeedbackService, private router: Router) {\n        this.feedbacks$ = feedbacks.getFeedbackList();\n    }\n\n    ngOnInit(): void {\n        this.feedbacks$ = this.feedbacks.getFeedbackList();\n    }\n\n    filterFeedbacks(category: string) {\n        this.feedbacks$ = category !== 'all' ? this.getFeedbacksFiltered(category) : this.feedbacks.getFeedbackList();\n    }\n\n    private getFeedbacksFiltered(category: string): Observable<Feedback[]> {\n        return this.feedbacks\n            .getFeedbackList()\n            .pipe(map((feedbacks: Feedback[]) => feedbacks.filter((feedback: Feedback) => feedback.category === category)));\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'tools/mixins';\n\n// Layout\n.layout {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 1.875rem;\n    padding: 5.875rem 0 8.0625rem 0;\n\n    .main {\n        flex: 1;\n        flex-grow: 315;\n    }\n\n    .aside {\n        display: flex;\n        flex-direction: column;\n        gap: 1.5rem;\n        flex-basis: 15.9375rem;\n        flex-grow: 1;\n    }\n}\n\n.pointer {\n    cursor: pointer;\n}\n\n// Feedback card margins\n.feedback-list {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n// Feedback aside mobile\n.feedback-aside-mobile {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n\n// Toolbar classes\n.toolbar {\n    margin-bottom: 1.5rem;\n\n    &__header {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n    }\n}\n",
                    "styleUrl": "./suggestions-layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "feedbacks",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "feedbacks",
                        "type": "FeedbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *transloco=\"let t\" class=\"layout\">\n    <aside class=\"aside\">\n        <app-banner>\n            <h2 app-banner-title class=\"text-white\">{{ t('title') }}</h2>\n            <span app-banner-subtitle>{{ t('subtitle') }}</span>\n        </app-banner>\n        <app-category-filter (categorySelected)=\"filterFeedbacks($event)\"></app-category-filter>\n    </aside>\n    <main class=\"main\">\n        <ui-toolbar class=\"toolbar\" justify=\"between\">\n            <div class=\"toolbar__header\">\n                <img src=\"/assets/images/suggestions/icon-suggestions.svg\" alt=\"\" />\n                <h3 class=\"text-white\">{{ (feedbacks$ | async)?.length }} {{ t('toolbarTitle') }}</h3>\n            </div>\n            <button ui-button color=\"primary\"><ui-icon name=\"plus\"></ui-icon> {{ t('createFeedbackLabelButton') }}</button>\n        </ui-toolbar>\n        <section class=\"feedback-list\" *ngIf=\"(feedbacks$ | async)!.length > 0\">\n            <app-feedback-card class=\"pointer\" *ngFor=\"let feedback of feedbacks$ | async\" routerLink=\"/feedback/detail/{{ feedback.id }}\">\n                <ui-counter\n                    feedback-card-aside\n                    class=\"hide-mobile\"\n                    [activeAfterFirstClick]=\"true\"\n                    [initValue]=\"feedback.upvotes\"\n                ></ui-counter>\n                <ng-container feedback-card-aside>\n                    <section class=\"show-only-mobile\">\n                        <div class=\"feedback-aside-mobile\">\n                            <ui-counter order=\"row\" [activeAfterFirstClick]=\"true\" [initValue]=\"feedback.upvotes\"></ui-counter>\n                            <ui-icon name=\"comments\" ui-badge [value]=\"feedback.comments ? feedback.comments.length : 0\"></ui-icon>\n                        </div>\n                    </section>\n                </ng-container>\n                <h3 feedback-card-title>{{ feedback.title }}</h3>\n                <div feedback-card-content>\n                    <p class=\"text\">{{ feedback.description }}</p>\n                    <ui-icon\n                        class=\"hide-mobile\"\n                        name=\"comments\"\n                        ui-badge\n                        [value]=\"feedback.comments ? feedback.comments.length : 0\"\n                    ></ui-icon>\n                </div>\n                <ui-chip feedback-card-footer [selectable]=\"false\">{{ feedback.category | titlecase }}</ui-chip>\n            </app-feedback-card>\n        </section>\n        <app-empty-feedbacks *ngIf=\"(feedbacks$ | async)!.length === 0\">\n            <h1 empty-feedbacks-title>{{ t('emptyFeedbackList.title') }}</h1>\n            <p empty-feedbacks-body>{{ t('emptyFeedbackList.description') }}</p>\n            <button ui-button color=\"primary\" empty-feedbacks-button>\n                <ui-icon name=\"plus\"></ui-icon> {{ t('createFeedbackLabelButton') }}\n            </button>\n        </app-empty-feedbacks>\n    </main>\n</div>\n"
        },
        {
            "name": "UiChipComponent",
            "id": "component-UiChipComponent-707ba43c5ec8772f819acd9e1067029c67ccfc3e400b042faca09f2e1eb81ba70ab8daca1c53308e8f316b6db5049865b9e3f358baf1a59805b9f09ece7a1924",
            "file": "src/app/shared/ui-components/chips/chip/ui-chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-chip",
            "styleUrls": [
                "./ui-chip.component.scss"
            ],
            "styles": [],
            "template": "<span class=\"ui-chip\" [class.ui-chip--active]=\"active\" [class.ui-chip--selected]=\"selectable\" #text>       <ng-content></ng-content>\n   </span>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-chip',\n    template: ` <span class=\"ui-chip\" [class.ui-chip--active]=\"active\" [class.ui-chip--selected]=\"selectable\" #text>\n        <ng-content></ng-content>\n    </span>`,\n    styleUrls: ['./ui-chip.component.scss'],\n})\nexport class UiChipComponent {\n    @Input() selectable: boolean = true;\n    @Input() active: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.ui-chip {\n    display: inline-block;\n    font-weight: 600;\n    padding: 0.39em 1.153em;\n    border-radius: 0.625rem;\n    background-color: colors.$chips-background-color;\n    color: colors.$secondary-color;\n\n    &--selected:hover {\n        background-color: darken(colors.$chips-background-color, 10%);\n        color: colors.$secondary-color;\n        cursor: pointer;\n    }\n\n    &--active {\n        background-color: colors.$secondary-color;\n        color: colors.$light-text-color;\n\n        &:hover {\n            background-color: colors.$secondary-color;\n            color: colors.$light-text-color;\n        }\n    }\n}\n",
                    "styleUrl": "./ui-chip.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "UiChipListComponent",
            "id": "component-UiChipListComponent-b0e2c92e12ac45f617c88f0d9a1faf237085c494db0bd99e8e1ff205b1a0ed549b881f27530c82e72b0d47601972fbcad90240b040f04396eb8f031ad89679b4",
            "file": "src/app/shared/ui-components/chips/chip-list/ui-chip-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-chip-list",
            "styleUrls": [
                "./ui-chip-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ui-chip-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-chip-list',\n    templateUrl: './ui-chip-list.component.html',\n    styleUrls: ['./ui-chip-list.component.scss'],\n})\nexport class UiChipListComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ui-chip-list {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n\n    row-gap: 1.125rem;\n    column-gap: 0.5rem;\n}\n",
                    "styleUrl": "./ui-chip-list.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"ui-chip-list\">\n    <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "UiCounterComponent",
            "id": "component-UiCounterComponent-3311cf623700e93088a62423f5b6bed596827e304307d0b6833f9193b0bc07c359062fa7f13703bf6486416c191ea322d1ca299bcc416020311bd01fd789deb4",
            "file": "src/app/shared/ui-components/counter/ui-counter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-counter",
            "styleUrls": [
                "./ui-counter.component.scss"
            ],
            "styles": [],
            "template": "<span        class=\"ui-counter\"\n        (click)=\"increment($event)\"\n        [class.ui-counter--active]=\"active\"\n        [class.ui-counter--row]=\"order === 'row'\"\n    >\n        <img class=\"ui-counter__icon\" src=\"assets/images/icons/icon-arrow-up.svg\" alt=\"counter icon\" />\n        <span class=\"ui-counter__value\">{{ value }}</span>\n    </span>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "limitClicksTo",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "order",
                    "defaultValue": "'column'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"column\" | \"row\"",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "increment",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isPositiveInteger",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-counter',\n    template: `<span\n        class=\"ui-counter\"\n        (click)=\"increment($event)\"\n        [class.ui-counter--active]=\"active\"\n        [class.ui-counter--row]=\"order === 'row'\"\n    >\n        <img class=\"ui-counter__icon\" src=\"assets/images/icons/icon-arrow-up.svg\" alt=\"counter icon\" />\n        <span class=\"ui-counter__value\">{{ value }}</span>\n    </span> `,\n    styleUrls: ['./ui-counter.component.scss'],\n})\nexport class UiCounterComponent {\n    @Input() limitClicksTo: number = 0;\n    @Input() order: 'column' | 'row' = 'column';\n    @Input() active: boolean = false;\n    @Input() value: number = 0;\n\n    increment(event: any): void {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.active) {\n            this.value++;\n            this.limitClicksTo--;\n            this.active = this.limitClicksTo === 0;\n        }\n    }\n\n    private isPositiveInteger(value: string): boolean {\n        return /^\\+?\\d+$/.test(value);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.ui-counter {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    max-width: 2.5rem;\n    min-height: 3.3125rem;\n    padding: 0.39em 1.153em;\n    border-radius: 0.625rem;\n\n    font-weight: 600;\n    background-color: colors.$chips-background-color;\n    color: colors.$text-color;\n    cursor: pointer;\n\n    &__value {\n        font-size: 0.8125rem;\n    }\n\n    &--row {\n        flex-direction: row;\n        gap: 0.625rem;\n        padding: 0.375rem 2rem;\n    }\n\n    &:hover {\n        background-color: darken(colors.$chips-background-color, 10%);\n        color: colors.$secondary-color;\n    }\n\n    &:active {\n        background-color: darken(colors.$chips-background-color, 20%);\n        color: colors.$secondary-color;\n    }\n\n    &--active {\n        background-color: colors.$secondary-color;\n        color: colors.$light-text-color;\n\n        .ui-counter__icon {\n            filter: brightness(0) invert(1);\n        }\n\n        &:hover {\n            background-color: colors.$secondary-color;\n            color: colors.$light-text-color;\n        }\n    }\n\n    &__icon {\n        width: 1rem;\n        height: auto;\n        margin-bottom: 0.5rem;\n    }\n}\n",
                    "styleUrl": "./ui-counter.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "UiIconComponent",
            "id": "component-UiIconComponent-ffb3448aabb87c845b122dc89c81dbdddc8b3cc3da2774d035dc8022aaa52180d0a41dbccf869ad168b2792d4d8eacb06fc1a8e5e3317d2c39208c6778b4f64c",
            "file": "src/app/shared/ui-components/icon/ui-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ui-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'desktop'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"desktop\" | \"mobile\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getIconPath",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nexport const ICONS_BASE_PATH = '/assets/images/icons';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-icon',\n    templateUrl: './ui-icon.component.html',\n})\nexport class UiIconComponent {\n    @Input() name!: string;\n    @Input() type: 'desktop' | 'mobile' = 'desktop';\n\n    getIconPath(): string {\n        return this.type === 'desktop'\n            ? `${ICONS_BASE_PATH}/icon-${this.name}.svg`\n            : `${ICONS_BASE_PATH}/${this.type}/icon-${this.name}.svg`;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<img *ngIf=\"name\" [src]=\"getIconPath()\" alt=\"\"/>\n"
        },
        {
            "name": "UiSelectOptionComponent",
            "id": "component-UiSelectOptionComponent-9a3ec77e877d3b2911b1cd148c3bf8cd8af06fcedd73b48014e35810bd7db20c686a3e0d4c3f23ada0d1a2e088089e47699b0506dde3bde85afe003970c62180",
            "file": "src/app/shared/ui-components/select/select-option/ui-select-option.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-select-option",
            "styleUrls": [
                "./ui-select-option.component.scss"
            ],
            "styles": [],
            "template": "<button class=\"ui-select-option\" [class.ui-select-option--selected]=\"selected\" #text>        <ng-content></ng-content><img *ngIf=\"selected\" src=\"assets/images/icons/icon-check.svg\" alt=\"\" />\n    </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "textElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'text'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostListener, Input, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { UiSelectService } from '../ui-select.service';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-select-option',\n    template: `<button class=\"ui-select-option\" [class.ui-select-option--selected]=\"selected\" #text>\n        <ng-content></ng-content><img *ngIf=\"selected\" src=\"assets/images/icons/icon-check.svg\" alt=\"\" />\n    </button> `,\n    styleUrls: ['./ui-select-option.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class UiSelectOptionComponent {\n    @Input() value: string = '';\n    @ViewChild('text') textElement!: ElementRef;\n    selected: boolean = false;\n\n    constructor(private select: UiSelectService) {}\n\n    @HostListener('click', ['$event'])\n    click() {\n        this.select.getSelect().selectOption(this);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.ui-select-option {\n    background: transparent;\n    color: colors.$text-color;\n    border: none;\n    padding: 0.75rem 1.5rem;\n    cursor: pointer;\n    width: 100%;\n\n    text-align: left;\n\n    &:hover {\n        color: colors.$primary-color;\n    }\n\n    &--selected {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n}\n",
                    "styleUrl": "./ui-select-option.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "select",
                        "type": "UiSelectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "select",
                        "type": "UiSelectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "UiSelectPanelComponent",
            "id": "component-UiSelectPanelComponent-852666ebc31398c104948d041b88510f1b353ab31d72258ec95f1006e51c83cef2217ab732a273d30fa919e497d78142832ced17a2577602e7e58c581cfd4aa3",
            "file": "src/app/shared/ui-components/select/select-panel/ui-select-panel.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => UiSelectPanelComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "ui-select",
            "styleUrls": [
                "./ui-select-panel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ui-select-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayedText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "isDropdownOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "onChangeFn",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "onTouchedFn",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<UiSelectOptionComponent>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "UiSelectOptionComponent"
                        }
                    ]
                },
                {
                    "name": "selectedOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UiSelectOptionComponent",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpened",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectOption",
                    "args": [
                        {
                            "name": "option",
                            "type": "UiSelectOptionComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "UiSelectOptionComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ContentChildren, forwardRef, Input, QueryList, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { fadeInOut } from '@shared/ui-components/animations/fade.animation';\nimport { UiSelectOptionComponent } from '../select-option/ui-select-option.component';\nimport { UiSelectService } from '../ui-select.service';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-select',\n    templateUrl: './ui-select-panel.component.html',\n    styleUrls: ['./ui-select-panel.component.scss'],\n    animations: [fadeInOut],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UiSelectPanelComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UiSelectPanelComponent implements AfterViewInit, ControlValueAccessor {\n    @Input() selected: string = '';\n    @Input() placeholder: string = '';\n    @Input() disabled: boolean = false;\n\n    @ContentChildren(UiSelectOptionComponent) options!: QueryList<UiSelectOptionComponent>;\n\n    selectedOption!: UiSelectOptionComponent;\n    displayedText: string = '';\n\n    isDropdownOpen: boolean = false;\n\n    constructor(private select: UiSelectService) {\n        this.select.register(this);\n    }\n\n    ngAfterViewInit(): void {\n        if (this.selected !== '') {\n            this.setSelected();\n        }\n    }\n\n    onTouchedFn = () => {};\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onChangeFn = (_: any) => {};\n\n    toggleDropdown() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        this.isDropdownOpen ? (this.isDropdownOpen = false) : (this.isDropdownOpen = true);\n    }\n\n    selectOption(option: UiSelectOptionComponent) {\n        this.selectedOption = option;\n        this.selected = option.value;\n        this.displayedText = this.selectedOption && this.selected !== '' ? option.textElement.nativeElement.innerText : '';\n        this.isDropdownOpen = false;\n        this.setSelected();\n        this.onChangeFn(this.selected);\n    }\n\n    onOpened() {\n        this.isDropdownOpen = true;\n        this.onTouchedFn();\n    }\n\n    onClose() {\n        this.isDropdownOpen = false;\n    }\n\n    setSelected() {\n        this.options.forEach((opt) => (opt.selected = opt.value === this.selected));\n    }\n\n    writeValue(fn: any): void {\n        this.onChangeFn = fn;\n    }\n    registerOnChange(fn: any): void {\n        this.onChangeFn = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchedFn = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n.ui-selector {\n    background-color: colors.$bg-input-color;\n    padding: 0.8125em 1.5em;\n    border-radius: 5px;\n    width: fit-content;\n    cursor: pointer;\n\n    &__input {\n        border: 0;\n        background-color: inherit;\n        cursor: pointer;\n\n        &:focus {\n            outline: none;\n        }\n    }\n\n    &--active {\n        outline: 1px solid colors.$outline-active-color;\n    }\n\n    &--error {\n        outline: 1px solid colors.$outline-error-color;\n    }\n\n    &--focus {\n        outline: 1px solid colors.$outline-active-color;\n    }\n}\n\n.ui-select-panel {\n    display: flex;\n    flex-direction: column;\n\n    min-width: 15.9375rem;\n    background-color: white;\n    border-radius: 0.625rem;\n    box-shadow: 0px 0.625rem 2.5rem -0.4375rem rgba(55, 63, 104, 0.350492);\n\n    & > ui-select-option:not(:last-child) {\n        border: none;\n        border-bottom: 1px solid hsla(0, 0, 53, 45%);\n    }\n}\n",
                    "styleUrl": "./ui-select-panel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "select",
                        "type": "UiSelectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "select",
                        "type": "UiSelectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "ControlValueAccessor"
            ],
            "templateData": "<div\n    class=\"ui-selector\"\n    [class.ui-selector--focus]=\"isDropdownOpen\"\n    cdkOverlayOrigin\n    (click)=\"toggleDropdown()\"\n    #trigger=\"cdkOverlayOrigin\"\n>\n    <input class=\"ui-selector__input\" [value]=\"displayedText\" [placeholder]=\"placeholder\" type=\"text\" readonly autocomplete=\"off\" />\n    <img class=\"ui-selector__icon\" src=\"assets/images/icons/icon-arrow-down.svg\" alt=\"Arrow down icon\" />\n</div>\n\n<ng-template\n    cdkConnectedOverlay\n    cdkConnectedOverlayLockPosition\n    cdkConnectedOverlayHasBackdrop\n    cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\n    [cdkConnectedOverlayOrigin]=\"trigger\"\n    [cdkConnectedOverlayOpen]=\"isDropdownOpen\"\n    (backdropClick)=\"isDropdownOpen = false\"\n    (opened)=\"onOpened()\"\n    (closed)=\"onClosed()\"\n>\n    <div class=\"ui-select-panel\" @fadeInOut>\n        <ng-content></ng-content>\n    </div>\n</ng-template>\n"
        },
        {
            "name": "UiToastComponent",
            "id": "component-UiToastComponent-af2a679f99503542aa61a3d15f599e50bb4e5017f0833aed2aae7b8be69c91876943a651d5b55d611f43fbd5c835dcded51e57547a936665ac2f298c775a4be4",
            "file": "src/app/shared/ui-components/toast/ui-toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-toast",
            "styleUrls": [
                "./ui-toast.component.scss"
            ],
            "styles": [],
            "template": "<div class=\"ui-toast\" @fadeInOut>       <span class=\"ui-toast__text\">{{ data.message }}</span>\n       <button class=\"ui-toast__button\" *ngIf=\"data.close\" (click)=\"close()\">{{ data.close }}</button>\n   </div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "intervalId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { fadeInOut } from '../animations/fade.animation';\nimport { UiToastData } from './ui-toast-data';\nimport { UiToastRef } from './ui-toast-ref';\nimport { Ui_TOAST_DATA } from './ui-toast-tokens';\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-toast',\n    template: ` <div class=\"ui-toast\" @fadeInOut>\n        <span class=\"ui-toast__text\">{{ data.message }}</span>\n        <button class=\"ui-toast__button\" *ngIf=\"data.close\" (click)=\"close()\">{{ data.close }}</button>\n    </div>`,\n    styleUrls: ['./ui-toast.component.scss'],\n    animations: [fadeInOut],\n})\nexport class UiToastComponent implements OnInit, OnDestroy {\n    private intervalId!: ReturnType<typeof setTimeout>;\n\n    constructor(private toastRef: UiToastRef, @Inject(Ui_TOAST_DATA) readonly data: UiToastData) {}\n\n    ngOnDestroy(): void {\n        if (this.intervalId) {\n            clearTimeout(this.intervalId);\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.data.duration) {\n            this.intervalId = setTimeout(() => {\n                this.close();\n            }, this.data.duration);\n        }\n    }\n\n    close() {\n        this.toastRef.close();\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n@use 'settings/typography';\n\n.ui-toast {\n    position: relative;\n    margin: 0.625rem;\n    padding: 0.5rem 1rem;\n\n    background-color: colors.$toast-background-color;\n    color: lighten(colors.$toast-background-color, 35%);\n    border-radius: 0.3125rem;\n    font-size: var(--fs-button);\n\n    &__button {\n        background-color: transparent;\n        border: 0;\n        font-size: var(--fs-button);\n        color: lighten(colors.$toast-background-color, 35%);\n\n        margin-left: 1.25rem;\n\n        cursor: pointer;\n    }\n}\n",
                    "styleUrl": "./ui-toast.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "toastRef",
                        "type": "UiToastRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "UiToastData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "toastRef",
                        "type": "UiToastRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "UiToastData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ]
        },
        {
            "name": "UiToolbarComponent",
            "id": "component-UiToolbarComponent-1c345dd8ed82eca96a50734f967450a2f9da9bccbd954cc6e540b5e3b68d8007a56b6ce5e103f1edfcdf7349fb34e581832b2b1de806c41e6907da54e1c3955d",
            "file": "src/app/shared/ui-components/toolbar/ui-toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-toolbar",
            "styleUrls": [
                "./ui-toolbar.component.scss"
            ],
            "styles": [],
            "template": "<div class=\"ui-toolbar\" [ngClass]=\"getJustifyClass()\" [class.bg-transparent]=\"background === 'transparent'\">        <ng-content></ng-content>\n    </div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "background",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"transparent\" | \"none\"",
                    "decorators": []
                },
                {
                    "name": "justify",
                    "defaultValue": "'start'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "JusfityType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getJustifyClass",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\nexport type JusfityType = 'start' | 'end' | 'center' | 'between' | 'around';\n\nexport const JUSTIFY_CSS_CLASES = {\n    start: 'ui-toolbar--start',\n    end: 'ui-toolbar--end',\n    center: 'ui-toolbar--center',\n    between: 'ui-toolbar--between',\n    around: 'ui-toolbar--around',\n};\n\n@Component({\n    // eslint-disable-next-line @angular-eslint/component-selector\n    selector: 'ui-toolbar',\n    template: `<div class=\"ui-toolbar\" [ngClass]=\"getJustifyClass()\" [class.bg-transparent]=\"background === 'transparent'\">\n        <ng-content></ng-content>\n    </div> `,\n    styleUrls: ['./ui-toolbar.component.scss'],\n})\nexport class UiToolbarComponent {\n    @Input() justify: JusfityType = 'start';\n    @Input() background: 'transparent' | 'none' = 'none';\n\n    getJustifyClass(): string {\n        return JUSTIFY_CSS_CLASES[this.justify];\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'settings/colors';\n\n:host {\n    display: block;\n}\n\n.ui-toolbar {\n    display: flex;\n    padding: 0.875rem 1rem;\n    background-color: colors.$toolbar-background-color;\n    border-radius: 0.625rem;\n    color: colors.$light-text-color;\n\n    &--between {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    &--around {\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n    }\n\n    &--end {\n        justify-content: flex-end;\n        align-items: center;\n    }\n\n    &--center {\n        justify-content: center;\n        align-items: center;\n    }\n\n    &--start {\n        justify-content: flex-start;\n        align-items: center;\n    }\n}\n",
                    "styleUrl": "./ui-toolbar.component.scss"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-026f7b2e689f0d925a83e8c7482cf6c61bbdacfd6890e9b4b2e10d438c81b2f21e07996eb0f0547b287d978163ea6a2cc4e85dcbb6f97ce348277d2b91974271",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SuggestionsModule } from './modules/suggestions/suggestions.module';\nimport { TranslocoRootModule } from './transloco-root.module';\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        TranslocoRootModule,\n\n        // Modules\n        SuggestionsModule,\n    ],\n    providers: [],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SuggestionsModule"
                        },
                        {
                            "name": "TranslocoRootModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-73c169430b7ce3932bb1a37f2df5429e0b9db97173081a68c172cb3b399e57332338900adc7866a6cd8df463bdaedbd6cf680f57ca7fcd2e0c438c7cb851bd5e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: '',\n        loadChildren: () => \"import('./modules/suggestions/suggestions.module').then((m) => m.SuggestionsModule)\",\n    },\n\n    {\n        path: 'feedback',\n        loadChildren: () => \"import('./modules/feedback/feedback.module').then((m) => m.FeedbackModule)\",\n    },\n\n    {\n        path: '**',\n        redirectTo: '',\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BannerModule",
            "id": "module-BannerModule-6238079d61596ac4da4f680dfc49a4befbf53a435cb8b9d4006a6f50a5ceda77269f175091b245c769eff3a34513cd467cca5abacd5e122636b6341f66403897",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/suggestions/components/banner/banner.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BannerComponent } from './banner.component';\nimport { BannerSubtitleDirective, BannerTitleDirective } from './banner.directive';\n\n@NgModule({\n    declarations: [BannerTitleDirective, BannerSubtitleDirective, BannerComponent],\n    imports: [CommonModule],\n    exports: [BannerTitleDirective, BannerSubtitleDirective, BannerComponent],\n})\nexport class BannerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BannerComponent"
                        },
                        {
                            "name": "BannerSubtitleDirective"
                        },
                        {
                            "name": "BannerTitleDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BannerComponent"
                        },
                        {
                            "name": "BannerSubtitleDirective"
                        },
                        {
                            "name": "BannerTitleDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EmptyFeedbacksModule",
            "id": "module-EmptyFeedbacksModule-081271e4856f40522ca623e944cc661ba0418d18260b11be25ae8aa671a6d4a4c2a094f8735c891ffd1bc24392be5bbda210d779c39bb0a2ac40d7307c9a7d9f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/suggestions/components/empty-feedbacks/empty-feedbacks.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EmptyFeedbacksComponent } from './empty-feedbacks.component';\nimport { EmptyFeedbacksBodyDirective, EmptyFeedbacksTitleDirective } from './empty-feedbacks.directive';\n\n@NgModule({\n    declarations: [EmptyFeedbacksComponent, EmptyFeedbacksBodyDirective, EmptyFeedbacksTitleDirective],\n    imports: [CommonModule],\n    exports: [EmptyFeedbacksComponent, EmptyFeedbacksBodyDirective, EmptyFeedbacksTitleDirective],\n})\nexport class EmptyFeedbacksModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EmptyFeedbacksBodyDirective"
                        },
                        {
                            "name": "EmptyFeedbacksComponent"
                        },
                        {
                            "name": "EmptyFeedbacksTitleDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "EmptyFeedbacksBodyDirective"
                        },
                        {
                            "name": "EmptyFeedbacksComponent"
                        },
                        {
                            "name": "EmptyFeedbacksTitleDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeedbackModule",
            "id": "module-FeedbackModule-6571e7eae8006d12c65a9800f2b5251b105b5560d511e9c6ee8e6d8fbb14d43d39156a04d119c305f9100c4030087d2e024cf094b7734c6f978d102e4657a523",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/feedback/feedback.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UiBadgeModule } from '@shared/ui-components/badge/ui-badge.module';\nimport { UiButtonModule } from '@shared/ui-components/button/ui-button.module';\nimport { UiChipsModule } from '@shared/ui-components/chips/ui-chips.module';\nimport { UiCounterModule } from '@shared/ui-components/counter/ui-counter.module';\nimport { UiFeedbackCardModule } from '@shared/ui-components/feedback-card/feedback-card.module';\nimport { UiIconModule } from '@shared/ui-components/icon/ui-icon.module';\nimport { UiToolbarModule } from '@shared/ui-components/toolbar/ui-toolbar.module';\nimport { BackBtnComponent } from './components/back-btn/back-btn.component';\nimport { FeedbackDetailComponent } from './layouts/feedback-detail/feedback-detail.component';\n\nconst routes: Routes = [\n    {\n        path: 'detail/:id',\n        component: FeedbackDetailComponent,\n    },\n];\n\n@NgModule({\n    declarations: [FeedbackDetailComponent, BackBtnComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        UiToolbarModule,\n        UiButtonModule,\n        UiIconModule,\n        UiFeedbackCardModule,\n        UiCounterModule,\n        UiChipsModule,\n        UiBadgeModule,\n    ],\n    exports: [RouterModule],\n})\nexport class FeedbackModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BackBtnComponent"
                        },
                        {
                            "name": "FeedbackDetailComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "UiBadgeModule"
                        },
                        {
                            "name": "UiButtonModule"
                        },
                        {
                            "name": "UiChipsModule"
                        },
                        {
                            "name": "UiCounterModule"
                        },
                        {
                            "name": "UiFeedbackCardModule"
                        },
                        {
                            "name": "UiIconModule"
                        },
                        {
                            "name": "UiToolbarModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SuggestionsModule",
            "id": "module-SuggestionsModule-8a20f0e890efc514c687357e3cd4bc89dd1a1636e9de2dd952801648145356032e61883e3730602a11cd43dd2bb850114715c7e01f3a79583ba43202f94a3e4d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/suggestions/suggestions.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { UiBadgeModule } from '@shared/ui-components/badge/ui-badge.module';\nimport { UiButtonModule } from '@shared/ui-components/button/ui-button.module';\nimport { UiChipsModule } from '@shared/ui-components/chips/ui-chips.module';\nimport { UiCounterModule } from '@shared/ui-components/counter/ui-counter.module';\nimport { UiIconModule } from '@shared/ui-components/icon/ui-icon.module';\nimport { UiToolbarModule } from '@shared/ui-components/toolbar/ui-toolbar.module';\nimport { UiFeedbackCardModule } from '../../shared/ui-components/feedback-card/feedback-card.module';\nimport { BannerModule } from './components/banner/banner.module';\nimport { CategoryFilterComponent } from './components/category-filter/category-filter.component';\nimport { EmptyFeedbacksModule } from './components/empty-feedbacks/empty-feedbacks.module';\nimport { SuggestionsLayoutComponent } from './layout/suggestions-layout.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SuggestionsLayoutComponent,\n        pathMatch: 'full',\n    },\n];\n\n@NgModule({\n    declarations: [SuggestionsLayoutComponent, CategoryFilterComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        ReactiveFormsModule,\n        UiCounterModule,\n        UiBadgeModule,\n        UiChipsModule,\n        UiIconModule,\n        UiToolbarModule,\n        UiButtonModule,\n        UiFeedbackCardModule,\n        EmptyFeedbacksModule,\n        BannerModule,\n        TranslocoModule,\n    ],\n    exports: [RouterModule],\n})\nexport class SuggestionsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CategoryFilterComponent"
                        },
                        {
                            "name": "SuggestionsLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BannerModule"
                        },
                        {
                            "name": "EmptyFeedbacksModule"
                        },
                        {
                            "name": "UiBadgeModule"
                        },
                        {
                            "name": "UiButtonModule"
                        },
                        {
                            "name": "UiChipsModule"
                        },
                        {
                            "name": "UiCounterModule"
                        },
                        {
                            "name": "UiFeedbackCardModule"
                        },
                        {
                            "name": "UiIconModule"
                        },
                        {
                            "name": "UiToolbarModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TranslocoRootModule",
            "id": "module-TranslocoRootModule-5ccb1d6465eb1b52a67b732370bfd47d524e05ce79443df804d1c0bb0c4a731098685225f6c5f9948c22acb9d91ec3969fb7b1cebee4dc5fb5a9bd120d939b26",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/transloco-root.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, NgModule } from '@angular/core';\nimport { environment } from '../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get<Translation>(`/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en'],\n        defaultLang: 'en',\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiBadgeModule",
            "id": "module-UiBadgeModule-cc09fc693b44f7626de925c1e7754da7e1d0d071f03594cb9d16b67e2a128d4879f18064026ade6c28eb1e2fba88855d1af01906e7859191155e273995b9cad7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/ui-components/badge/ui-badge.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiBadgeDirective } from './ui-badge.directive';\n\n@NgModule({\n    declarations: [UiBadgeDirective],\n    imports: [CommonModule],\n    exports: [UiBadgeDirective],\n})\nexport class UiBadgeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiBadgeDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiBadgeDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiButtonModule",
            "id": "module-UiButtonModule-71b3862a78bc1e8f9830d13f98bb504640fdaef76d29a278473e61c5b900b6237205178e4a35dec1d0b3b239f31241005690ccc10f0a4f61087d725e3768587a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/ui-components/button/ui-button.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiButtonDirective } from './ui-button.directive';\n\n@NgModule({\n    declarations: [UiButtonDirective],\n    imports: [CommonModule],\n    exports: [UiButtonDirective],\n})\nexport class UiButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiButtonDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiButtonDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiChipsModule",
            "id": "module-UiChipsModule-53de5fa3a2d459a5fec888b7f3c7986f52e65d667eee146ac3287b952b06db40f1e3a26516938a49215c0bfe9ac17651be75c6a65c2415e354c6e15c0fb82a0f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/ui-components/chips/ui-chips.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiChipListComponent } from './chip-list/ui-chip-list.component';\nimport { UiChipComponent } from './chip/ui-chip.component';\n\n@NgModule({\n    declarations: [UiChipComponent, UiChipListComponent],\n    imports: [CommonModule],\n    exports: [UiChipComponent, UiChipListComponent],\n})\nexport class UiChipsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiChipComponent"
                        },
                        {
                            "name": "UiChipListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiChipComponent"
                        },
                        {
                            "name": "UiChipListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiCounterModule",
            "id": "module-UiCounterModule-46a52df1efea7214ef401af7dc383d6d109cc31a66fef71453ab07018b698a2bbf4b05298a4db018583ec158427539cf416607b4c170580979c2cb9557c03adb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/ui-components/counter/ui-counter.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiCounterComponent } from './ui-counter.component';\n\n@NgModule({\n    declarations: [UiCounterComponent],\n    imports: [CommonModule],\n    exports: [UiCounterComponent],\n})\nexport class UiCounterModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiCounterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiCounterComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiFeedbackCardModule",
            "id": "module-UiFeedbackCardModule-afa8a8b3dd55ba5ff034205566ffe4b83d35e10524624e0b5923578d8c7e4d45c18816e6f99bdb5d048c2e277e659b1cc12970177a9c7ca9ae837262450c3c85",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/ui-components/feedback-card/feedback-card.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FeedbackCardComponent } from './feedback-card.component';\nimport {\n    FeedbackCardContentDirective,\n    FeedbackCardFooterDirective,\n    FeedbackCardSideDirective,\n    FeedbackCardTitleDirective,\n} from './feeed-card.directive';\n\n@NgModule({\n    declarations: [\n        FeedbackCardComponent,\n        FeedbackCardContentDirective,\n        FeedbackCardFooterDirective,\n        FeedbackCardTitleDirective,\n        FeedbackCardSideDirective,\n    ],\n    imports: [CommonModule],\n    exports: [\n        FeedbackCardComponent,\n        FeedbackCardContentDirective,\n        FeedbackCardFooterDirective,\n        FeedbackCardTitleDirective,\n        FeedbackCardSideDirective,\n    ],\n})\nexport class UiFeedbackCardModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FeedbackCardComponent"
                        },
                        {
                            "name": "FeedbackCardContentDirective"
                        },
                        {
                            "name": "FeedbackCardFooterDirective"
                        },
                        {
                            "name": "FeedbackCardSideDirective"
                        },
                        {
                            "name": "FeedbackCardTitleDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FeedbackCardComponent"
                        },
                        {
                            "name": "FeedbackCardContentDirective"
                        },
                        {
                            "name": "FeedbackCardFooterDirective"
                        },
                        {
                            "name": "FeedbackCardSideDirective"
                        },
                        {
                            "name": "FeedbackCardTitleDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiIconModule",
            "id": "module-UiIconModule-ce2e8605a5fef4847f19b3601787f57dda1d7d941d35cc7f42d257b9e6905529ac83f1e9554d2b0f5c36e3719c1d0d2a17f1d7900530e8cd381567a32fa4c66a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/ui-components/icon/ui-icon.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiIconComponent } from './ui-icon.component';\n\n@NgModule({\n    declarations: [UiIconComponent],\n    imports: [CommonModule],\n    exports: [UiIconComponent],\n})\nexport class UiIconModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiIconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiIconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiInputModule",
            "id": "module-UiInputModule-937f68cba34ee161454639807bbb8eb8dd631f28bc7509833dffa7c3606352740d3eeaa3afa857abbf5e11df6ddbc002aea61032cb07a34a27bf2d3e02c4e823",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/ui-components/input/ui-input.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiInputDirective } from './ui-input.directive';\n\n@NgModule({\n    declarations: [UiInputDirective],\n    imports: [CommonModule],\n    exports: [UiInputDirective],\n})\nexport class UiInputModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiInputDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiInputDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiSelectModule",
            "id": "module-UiSelectModule-f4f9167dd2960edbdb83d64afc41d9e1aec25c531d7f3e75adc442c8db4ec7db3bb09e92ca94cc9431bbcb0bee4c6999202eff89dd58fa76ca34a1e7b9ff5639",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/ui-components/select/ui-select.module.ts",
            "methods": [],
            "sourceCode": "import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiSelectOptionComponent } from './select-option/ui-select-option.component';\nimport { UiSelectPanelComponent } from './select-panel/ui-select-panel.component';\n\n@NgModule({\n    declarations: [UiSelectPanelComponent, UiSelectOptionComponent],\n    imports: [CommonModule, OverlayModule],\n    exports: [UiSelectPanelComponent, UiSelectOptionComponent],\n})\nexport class UiSelectModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiSelectOptionComponent"
                        },
                        {
                            "name": "UiSelectPanelComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiSelectOptionComponent"
                        },
                        {
                            "name": "UiSelectPanelComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiToastModule",
            "id": "module-UiToastModule-5c90412a57172ef47808e46903d4e205f15171d41ad07547a45e452aa5163e3e29d96e779ae9e5d77d326e563a08b97543fd047384bdf1b14a3a8401ebfa758d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/ui-components/toast/ui-toast.module.ts",
            "methods": [],
            "sourceCode": "import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiToastComponent } from './ui-toast.component';\n\n@NgModule({\n    declarations: [UiToastComponent],\n    imports: [CommonModule, OverlayModule],\n    exports: [UiToastComponent],\n})\nexport class UiToastModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiToastComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiToastComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiToolbarModule",
            "id": "module-UiToolbarModule-70c5c16c3ac3e6c7d166f21cd533004160a4056393543dfb8bfc740f9cfbad5a24fceda4da4533e53c8e5b648e41d5924eb2fccc35a6aa6dc53d1b28183fee84",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/ui-components/toolbar/ui-toolbar.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UiToolbarComponent } from './ui-toolbar.component';\n\n@NgModule({\n    declarations: [UiToolbarComponent],\n    imports: [CommonModule],\n    exports: [UiToolbarComponent],\n})\nexport class UiToolbarModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UiToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UiToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/counter/counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/chips/stories/chip-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/chips/stories/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "configureTests",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "test-config.helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(configure: ConfigureFn, compilerOptions: CompilerOptions = {}) => {\n  const compilerConfig: CompilerOptions = {\n    preserveWhitespaces: false,\n    ...compilerOptions,\n  };\n\n  const configuredTestBed = TestBed.configureCompiler(compilerConfig);\n\n  configure(configuredTestBed);\n\n  return configuredTestBed.compileComponents().then(() => configuredTestBed);\n}"
            },
            {
                "name": "endpoints",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/endpoints.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n    users: `${environment.apiUrl}/users`,\n    comments: `${environment.apiUrl}/comments`,\n    feedbacks: `${environment.apiUrl}/feedbacks`,\n    replies: `${environment.apiUrl}/replies`,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n    production: false,\n\n    apiUrl: 'http://localhost:3000/api/v1',\n}"
            },
            {
                "name": "fadeInOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/animations/fade.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('fadeInOut', [\n    transition(':enter', [style({ opacity: 0 }), animate('.3s ease-out', style({ opacity: 1 }))]),\n    transition(':leave', [animate('.3s ease-in', style({ opacity: 0 }))]),\n])"
            },
            {
                "name": "ICONS_BASE_PATH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/icon/ui-icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'/assets/images/icons'"
            },
            {
                "name": "JUSTIFY_CSS_CLASES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/toolbar/ui-toolbar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n    start: 'ui-toolbar--start',\n    end: 'ui-toolbar--end',\n    center: 'ui-toolbar--center',\n    between: 'ui-toolbar--between',\n    around: 'ui-toolbar--around',\n}"
            },
            {
                "name": "mock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "setup-jest.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  let storage: { [key: string]: string } = {};\n  return {\n    getItem: (key: string) => (key in storage ? storage[key] : null),\n    setItem: (key: string, value: string) => (storage[key] = value || ''),\n    removeItem: (key: string) => delete storage[key],\n    clear: () => (storage = {}),\n  };\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiButtonDirective>",
                "defaultValue": "(args: UiButtonDirective) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiButtonDirective],\n        imports: [CommonModule],\n    },\n    template: `<button ui-button [color]=\"color\" [size]=\"size\">Button</button>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/counter/counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiCounterComponent>",
                "defaultValue": "(args: UiCounterComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiCounterComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-counter></ui-counter>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiIconComponent>",
                "defaultValue": "(args: UiIconComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiIconComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-icon name=\"comments\"></ui-icon> `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiInputDirective>",
                "defaultValue": "(args: UiInputDirective) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiInputDirective],\n        imports: [CommonModule],\n    },\n    template: `<input uiInput [ngModel]=\"value\" />`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/toolbar/toolbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiToolbarComponent>",
                "defaultValue": "(args: UiToolbarComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiToolbarComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-toolbar>Toolbar</ui-toolbar>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/chips/stories/chip-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiChipListComponent>",
                "defaultValue": "(args: UiChipListComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiChipListComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-chip-list><ui-chip>Two</ui-chip><ui-chip>Three</ui-chip><ui-chip>Four</ui-chip><ui-chip>Five</ui-chip></ui-chip-list>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/chips/stories/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<UiChipComponent>",
                "defaultValue": "(args: UiChipComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiChipComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-chip>Chip</ui-chip>`,\n})"
            },
            {
                "name": "Ui_TOAST_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/ui-components/toast/ui-toast-tokens.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<UiToastData>('TOAST_DATA')"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ButtonColors",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"light\" | \"dark\" | \"error\" | \"default\"",
                "file": "src/app/shared/ui-components/button/ui-button.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"long\" | \"default\"",
                "file": "src/app/shared/ui-components/button/ui-button.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ButtonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"button\" | \"submit\" | \"reset\"",
                "file": "src/app/shared/ui-components/button/ui-button.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "CompilerOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Partial<literal type>",
                "file": "test-config.helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "ConfigureFn",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "test-config.helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "JusfityType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"start\" | \"end\" | \"center\" | \"between\" | \"around\"",
                "file": "src/app/shared/ui-components/toolbar/ui-toolbar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "UiToastPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\" | \"top-center\" | \"bottom-center\" | \"center\"",
                "file": "src/app/shared/ui-components/toast/ui-toast-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/shared/ui-components/button/button.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiButtonDirective>",
                    "defaultValue": "(args: UiButtonDirective) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiButtonDirective],\n        imports: [CommonModule],\n    },\n    template: `<button ui-button [color]=\"color\" [size]=\"size\">Button</button>`,\n})"
                }
            ],
            "src/app/shared/ui-components/counter/counter.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/counter/counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/counter/counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiCounterComponent>",
                    "defaultValue": "(args: UiCounterComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiCounterComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-counter></ui-counter>`,\n})"
                }
            ],
            "src/app/shared/ui-components/icon/icon.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiIconComponent>",
                    "defaultValue": "(args: UiIconComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiIconComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-icon name=\"comments\"></ui-icon> `,\n})"
                }
            ],
            "src/app/shared/ui-components/input/input.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiInputDirective>",
                    "defaultValue": "(args: UiInputDirective) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiInputDirective],\n        imports: [CommonModule],\n    },\n    template: `<input uiInput [ngModel]=\"value\" />`,\n})"
                }
            ],
            "src/app/shared/ui-components/toolbar/toolbar.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/toolbar/toolbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiToolbarComponent>",
                    "defaultValue": "(args: UiToolbarComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiToolbarComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-toolbar>Toolbar</ui-toolbar>`,\n})"
                }
            ],
            "src/app/shared/ui-components/chips/stories/chip-list.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/chips/stories/chip-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/chips/stories/chip-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiChipListComponent>",
                    "defaultValue": "(args: UiChipListComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiChipListComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-chip-list><ui-chip>Two</ui-chip><ui-chip>Three</ui-chip><ui-chip>Four</ui-chip><ui-chip>Five</ui-chip></ui-chip-list>`,\n})"
                }
            ],
            "src/app/shared/ui-components/chips/stories/chip.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/chips/stories/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/chips/stories/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<UiChipComponent>",
                    "defaultValue": "(args: UiChipComponent) => ({\n    props: args,\n    moduleMetadata: {\n        declarations: [UiChipComponent],\n        imports: [CommonModule],\n    },\n    template: `<ui-chip>Chip</ui-chip>`,\n})"
                }
            ],
            "test-config.helper.ts": [
                {
                    "name": "configureTests",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "test-config.helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(configure: ConfigureFn, compilerOptions: CompilerOptions = {}) => {\n  const compilerConfig: CompilerOptions = {\n    preserveWhitespaces: false,\n    ...compilerOptions,\n  };\n\n  const configuredTestBed = TestBed.configureCompiler(compilerConfig);\n\n  configure(configuredTestBed);\n\n  return configuredTestBed.compileComponents().then(() => configuredTestBed);\n}"
                }
            ],
            "src/app/core/http/endpoints.ts": [
                {
                    "name": "endpoints",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/endpoints.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n    users: `${environment.apiUrl}/users`,\n    comments: `${environment.apiUrl}/comments`,\n    feedbacks: `${environment.apiUrl}/feedbacks`,\n    replies: `${environment.apiUrl}/replies`,\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n    production: false,\n\n    apiUrl: 'http://localhost:3000/api/v1',\n}"
                }
            ],
            "src/app/shared/ui-components/animations/fade.animation.ts": [
                {
                    "name": "fadeInOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/animations/fade.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('fadeInOut', [\n    transition(':enter', [style({ opacity: 0 }), animate('.3s ease-out', style({ opacity: 1 }))]),\n    transition(':leave', [animate('.3s ease-in', style({ opacity: 0 }))]),\n])"
                }
            ],
            "src/app/shared/ui-components/icon/ui-icon.component.ts": [
                {
                    "name": "ICONS_BASE_PATH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/icon/ui-icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'/assets/images/icons'"
                }
            ],
            "src/app/shared/ui-components/toolbar/ui-toolbar.component.ts": [
                {
                    "name": "JUSTIFY_CSS_CLASES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/toolbar/ui-toolbar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n    start: 'ui-toolbar--start',\n    end: 'ui-toolbar--end',\n    center: 'ui-toolbar--center',\n    between: 'ui-toolbar--between',\n    around: 'ui-toolbar--around',\n}"
                }
            ],
            "setup-jest.ts": [
                {
                    "name": "mock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "setup-jest.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  let storage: { [key: string]: string } = {};\n  return {\n    getItem: (key: string) => (key in storage ? storage[key] : null),\n    setItem: (key: string, value: string) => (storage[key] = value || ''),\n    removeItem: (key: string) => delete storage[key],\n    clear: () => (storage = {}),\n  };\n}"
                }
            ],
            "src/app/shared/ui-components/toast/ui-toast-tokens.ts": [
                {
                    "name": "Ui_TOAST_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/ui-components/toast/ui-toast-tokens.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<UiToastData>('TOAST_DATA')"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/shared/ui-components/button/ui-button.directive.ts": [
                {
                    "name": "ButtonColors",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"light\" | \"dark\" | \"error\" | \"default\"",
                    "file": "src/app/shared/ui-components/button/ui-button.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "ButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"long\" | \"default\"",
                    "file": "src/app/shared/ui-components/button/ui-button.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "ButtonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"button\" | \"submit\" | \"reset\"",
                    "file": "src/app/shared/ui-components/button/ui-button.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "test-config.helper.ts": [
                {
                    "name": "CompilerOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Partial<literal type>",
                    "file": "test-config.helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "ConfigureFn",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "test-config.helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ],
            "src/app/shared/ui-components/toolbar/ui-toolbar.component.ts": [
                {
                    "name": "JusfityType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"start\" | \"end\" | \"center\" | \"between\" | \"around\"",
                    "file": "src/app/shared/ui-components/toolbar/ui-toolbar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/shared/ui-components/toast/ui-toast-data.ts": [
                {
                    "name": "UiToastPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\" | \"top-center\" | \"bottom-center\" | \"center\"",
                    "file": "src/app/shared/ui-components/toast/ui-toast-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "loadChildren": "./modules/suggestions/suggestions.module#SuggestionsModule"
                    },
                    {
                        "path": "feedback",
                        "loadChildren": "./modules/feedback/feedback.module#FeedbackModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/modules/feedback/feedback.module.ts",
                                        "module": "FeedbackModule",
                                        "children": [
                                            {
                                                "path": "detail/:id",
                                                "component": "FeedbackDetailComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "FeedbackModule"
                            }
                        ]
                    },
                    {
                        "path": "**",
                        "redirectTo": ""
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/modules/suggestions/suggestions.module.ts",
                "module": "SuggestionsModule",
                "children": [
                    {
                        "path": "",
                        "component": "SuggestionsLayoutComponent",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "setup-jest.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/comment.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CommentService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/endpoints.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "endpoints",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/feedback.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FeedbackService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/reply.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ReplyService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/comment.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Comment",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/feedback.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Feedback",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/reply.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Reply",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/components/back-btn/back-btn.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BackBtnComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/feedback/layouts/feedback-detail/feedback-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedbackDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/suggestions/components/banner/banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/suggestions/components/banner/banner.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BannerSubtitleDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/suggestions/components/banner/banner.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BannerTitleDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/suggestions/components/category-filter/category-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/suggestions/components/empty-feedbacks/empty-feedbacks.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmptyFeedbacksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/suggestions/components/empty-feedbacks/empty-feedbacks.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "EmptyFeedbacksBodyDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/suggestions/components/empty-feedbacks/empty-feedbacks.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "EmptyFeedbacksTitleDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/suggestions/layout/suggestions-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SuggestionsLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/animations/fade.animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fadeInOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/badge/ui-badge.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UiBadgeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/button/ui-button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UiButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/chips/chip-list/ui-chip-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiChipListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/chips/chip/ui-chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/chips/stories/chip-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/chips/stories/chip-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/chips/stories/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/chips/stories/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/counter/counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/counter/counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/counter/ui-counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiCounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/feedback-card/feedback-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedbackCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/feedback-card/feeed-card.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FeedbackCardContentDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/feedback-card/feeed-card.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FeedbackCardFooterDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/feedback-card/feeed-card.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FeedbackCardSideDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/feedback-card/feeed-card.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FeedbackCardTitleDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/icon/ui-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/icon/ui-icon.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ICONS_BASE_PATH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/input/ui-input.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UiInputDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/select/select-option/ui-select-option.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiSelectOptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/select/select-panel/ui-select-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiSelectPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/select/ui-select.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UiSelectService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/toast/ui-toast-data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UiToastData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/toast/ui-toast-ref.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UiToastRef",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/toast/ui-toast-tokens.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Ui_TOAST_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/toast/ui-toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/toast/ui-toast.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UiToastService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/toolbar/toolbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/toolbar/ui-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/toolbar/ui-toolbar.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "JUSTIFY_CSS_CLASES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/transloco-root.module.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TranslocoHttpLoader",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "test-config.helper.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configureTests",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}